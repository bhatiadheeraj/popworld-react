{"version":3,"sources":["../../../popworld_updated/pop-world/src/components/CustomNavbar.js","../../../popworld_updated/pop-world/src/components/Home.js","../../../popworld_updated/pop-world/src/components/Developer.js","../../../popworld_updated/pop-world/src/components/Footer.js","../../../popworld_updated/pop-world/src/components/About.js","../../../popworld_updated/pop-world/src/modules/HelpForm.js","../../../popworld_updated/pop-world/src/components/Help.js","../../../popworld_updated/pop-world/src/modules/ResultForm.js","../../../popworld_updated/pop-world/src/modules/ShowLizard.js","../../../popworld_updated/pop-world/src/modules/BasicForm.js","../../../popworld_updated/pop-world/src/components/Basic.js","../../../popworld_updated/pop-world/src/modules/MigrationForm.js","../../../popworld_updated/pop-world/src/components/Migration.js","../../../popworld_updated/pop-world/src/modules/Table.js","../../../popworld_updated/pop-world/src/modules/DriftForm.js","../../../popworld_updated/pop-world/src/components/Drift.js","../../../popworld_updated/pop-world/src/modules/NR_MatingForm.js","../../../popworld_updated/pop-world/src/components/NR-Mating.js","../../../popworld_updated/pop-world/src/modules/MutationForm.js","../../../popworld_updated/pop-world/src/components/Mutation.js","../../../popworld_updated/pop-world/src/modules/SelectionForm.js","../../../popworld_updated/pop-world/src/components/Selection.js","../../../popworld_updated/pop-world/src/modules/M+S_Form.js","../../../popworld_updated/pop-world/src/components/M+S.js","../../../popworld_updated/pop-world/src/components/Graph.js","../../../popworld_updated/pop-world/src/App.js","../../../popworld_updated/pop-world/src/serviceWorker.js","../../../popworld_updated/pop-world/src/index.js"],"names":["CustomNavbar","react_default","a","createElement","Navbar","collapseOnSelect","fixed","bg","expand","Brand","href","Link","to","style","textDecoration","id","Toggle","aria-controls","Collapse","Nav","className","ButtonToolbar","Button","variant","Component","Home","Developers","Container","Card","Header","Body","Text","Footer","width","About","CardDeck","Img","src","Title","components_Developer","components_Footer","HelpForm","textAlign","position","top","left","right","opacity","zIndex","Table_default","striped","bordered","hover","colSpan","fontSize","color","Help","_React$createElement","height","Image","backgroundSize","margin","overflow","responsive","repeat","center","Object","defineProperty","HelpForm_HelpForm","ResultForm","text","Row","Col","this","props","red_value","p_value","a1a1_value","blue_value","q_value","a1a2_value","generation","dominance","a2a2_value","ShowLizard","showLizardBlue","num","blue_images","min_y","_this","max_x","min_x","console","log","i","x_axis","Math","floor","random","y_axis","push","key","showLizardRed","red_images","parseInt","b","r","BasicForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderButton","pressed","type","onClick","handleSubmit","renderResult","modules_ResultForm","state","renderLizard","modules_ShowLizard","renderGraph","graph","bottom","backgroundColor","padding","borderRadius","react_chartkick_esm","xtitle","ytitle","legend","max","library","yAxis","tickInterval","data","colors","e","preventDefault","population","p","parseFloat","frequency","q","toFixed","constF","setState","a1a2","g","steps","currentGeneration","a1a1","a2a2","updateGraph","finalGeneration","handleButtonPress","button","target","split","handleInputChange","name","value","handleRestart","q_dict","p_dict","handleGraph","q_dictionary","p_dictionary","table","Chartkick","use","Highcharts","Form","Group","as","controlId","Label","column","sm","lg","Control","placeholder","onChange","ButtonGroup","aria-label","Basic","no-repeat","modules_BasicForm","MigrationForm","tmp_fract_migrants","fract_migrants","tmp_freq_A1star","freq_A1star","migrationFrequency","tempA1","Migration","modules_MigrationForm","TablePage","columns","label","field","sort","rows","mdbreact_esm","scrollX","maxHeight","paging","responsiveSm","searching","sorting","DriftForm","options","optionsChart","renderTable","tab","modules_Table","table_dict","button_state_restart_fix2","button_state_restart_fix","driftFrequency","twicePop","alleleCount","j","Record","Generation","P_Value","Q_Value","Table","window","alert","handleTable","Drift","modules_DriftForm","NR_MatingForm","p_Inbreeding","tempA2","F","loopFlag","firstGen","pow","NR_Mating","modules_NR_MatingForm","MutationForm","a1mutate","a1Toa2","a2mutate","a2Toa1","mutationFrequency","Mutation","modules_MutationForm","SelectionForm","fitnessa1a1","fitnessa1a2","fitnessa2a2","wAverage","selectionP","selectionQ","Selection","modules_SelectionForm","MSForm","msFrequency","MS","M_S_Form","Graph","changeProps","blue_dictionary","blue_dict","red_dictionary","red_dict","App","BrowserRouter","CustomNavbar_CustomNavbar","Route","exact","path","component","NR","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1905a678.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./CustomNavbar.css\";\n\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { Button, ButtonToolbar } from \"react-bootstrap\";\n\nexport default class CustomNavbar extends Component {\n  render() {\n    return (\n      <Navbar collapseOnSelect fixed=\"top\" bg=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n            <b id=\"logo\"> Pop!World </b>\n          </Link>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <ButtonToolbar>\n              \n              \n              <div className=\"container\">\n                <div className='rowr'>\n                <ul id='menu'>\n                  <li>\n                <Link to=\"/help\">\n                <Button variant=\"light\">\n                  {\" \"}\n                  <b>HELP</b>{\" \"}\n                </Button>\n              </Link></li>\n                <li><Link to=\"./basic\">\n                  <Button variant=\"primary\"> Basic </Button>\n                </Link></li>\n                \n                <li><Link to=\"./migration\">\n                  <Button variant=\"primary\"> Migration </Button>\n                </Link>\n                </li>\n                <li><Link to=\"./drift\">\n                  <Button variant=\"primary\"> Drift </Button>\n                </Link>\n                </li>\n                <li><Link to=\"./nr-mating\">\n                  <Button variant=\"primary\"> NR-Mating </Button>\n                </Link>\n                </li>\n               <li><Link to=\"./mutation\">\n                  <Button variant=\"primary\"> Mutation </Button>\n                </Link>\n                </li>\n                <li><Link to=\"./selection\">\n                  <Button variant=\"primary\"> Selection </Button>\n                </Link>\n                </li>\n                <li>\n                <Link to=\"./m+s\">\n                  <Button variant=\"primary\"> M+S </Button>\n                </Link>\n                </li>\n                {/* About page button */}\n              \n                <li><Link to=\"./about\">\n                  <Button variant=\"light\">\n                    {\" \"}\n                    <b> ABOUT </b>{\" \"}\n                  </Button>\n                </Link></li>\n                </ul>\n                </div>\n              </div>\n            </ButtonToolbar>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Home.css\";\nimport { Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <Link to=\"/help\">\n          <Button className=\"start_button\">START POPWORLD</Button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Container, Card } from \"react-bootstrap\";\nimport \"./Developer.css\";\n\nconst Developers = () => {\n  return (\n    <Container>\n      {/* About Card */}\n      <Card id=\"developer-card\">\n        <Card.Header id=\"developer-header\">Technology & Developers</Card.Header>\n        <Card.Body>\n          <Card.Text>\n            This webapp is built with React.js, Node.js, and React-Bootstrap and\n            is hosted using the Google Cloud Platform.\n            <br />\n            Developed By - Aunik Ahmed and Shubham Badola\n          </Card.Text>\n        </Card.Body>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Developers;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer\n      style={{\n        width: \"100%\"\n      }}\n    >\n      Property of the University at Buffalo\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Container, Card, CardDeck } from \"react-bootstrap\";\n\nimport Developer from \"./Developer\";\nimport Footer from \"./Footer.js\";\nimport \"./About.css\";\nconst About = () => {\n  return (\n    <div>\n      <Container>\n        {/* About Card */}\n        <Card id=\"about-card\">\n          <Card.Header id=\"about-header\">About</Card.Header>\n          <Card.Body>\n            <Card.Text>\n              POP! WORLD is an application built to introduce students to\n              population genetics. Population genetics traditionally has been a\n              field requiring intimate knowledge of mathematics and biology, the\n              aim of POP! WORLD is to provide students an easy way to experience\n              evolution in near real-time.\n            </Card.Text>\n          </Card.Body>\n        </Card>\n\n        {/* 3 Update Cards */}\n\n        <CardDeck id=\"update-cards\">\n          {/* 1st Update Card */}\n\n          <Card id=\"update\">\n            <Card.Img\n              variant=\"top\"\n              src=\"../../assets/update_pic_1.jpg\"\n              className=\"update-pic\" // This class is not being used anywhere\n            />\n            <Card.Header id=\"update-header-1\">You're in control</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                POP! WORLD allows students to run genetic simulations quickly\n                and painlessly, simply by manipulating variables within the app.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          {/* 2nd Update Card */}\n\n          <Card id=\"update\">\n            <Card.Img\n              variant=\"top\"\n              src=\"../../assets/update_pic_2.jpg\"\n              className=\"update-pic\" // This class is not being used anywhere\n            />\n            <Card.Header id=\"update-header-2\">\n              It's about exploration\n            </Card.Header>\n            <Card.Body>\n              <Card.Text>\n                POP! WORLD is about discovering the concepts and mechanics\n                behind evolution, by experimenting with populations inside the\n                app. This allows students to see evolution in action, in near\n                real-time.\n              </Card.Text>\n            </Card.Body>\n          </Card>\n\n          {/* 3rd Update Card */}\n\n          <Card id=\"update\">\n            <Card.Img\n              variant=\"top\"\n              src=\"../../assets/update_pic_3.jpg\"\n              className=\"update-pic\"\n            />\n            <Card.Header id=\"update-header-3\">It's fast!</Card.Header>\n            <Card.Body>\n              <Card.Text>\n                POP! WORLD doesn't require hours or days of intensive\n                calculation. Thanks to the processing power of the cloud\n                simulations are quick!\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </CardDeck>\n\n        {/* 2 Professor Cards */}\n\n        <CardDeck id=\"professor-cards\">\n          {/* 1st Professor */}\n\n          <Card id=\"professor\">\n            <Card.Img\n              variant=\"top\"\n              src=\"../../assets/jessica.jpg\"\n              id=\"profile-pic\"\n            />\n            <Card.Body>\n              <Card.Title>Dr. Jessica Poulin</Card.Title>\n              <Card.Text>Dr. Jessica Poulin's bio goes here.</Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              <small className=\"text-muted\">Biological Sciences</small>\n            </Card.Footer>\n          </Card>\n\n          {/* 2nd Professor */}\n\n          <Card id=\"professor\">\n            <Card.Img\n              variant=\"top\"\n              src=\"../../assets/bina.png\"\n              id=\"profile-pic\"\n            />\n            <Card.Body>\n              <Card.Title>Dr. Bina Ramamurthy</Card.Title>\n              <Card.Text>Dr. Bina Ramamurthy's bio goes here</Card.Text>\n            </Card.Body>\n            <Card.Footer>\n              <small className=\"text-muted\">\n                Computer Science and Engineering\n              </small>\n            </Card.Footer>\n          </Card>\n        </CardDeck>\n        <Developer />\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { Card } from \"react-bootstrap\";\n\nexport default class HelpForm extends Component {\n  render() {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        {/* About Card */}\n        <Card\n          style={{\n            // position: \"absolute\",\n            // alignSelf: \"center\",\n            // marginTop: \"160px\",\n            // marginLeft: \"85px\",\n            // width: \"75rem\",\n            // fontSize: 20,\n            position: 'absolute', \n            top:'10em',\n            left:'15em',\n            right:'15em',\n            width: \"auto\",\n            opacity: \"0.95\",\n            zIndex:'2'\n            \n          }}\n        >\n          <Card.Header className=\"help-header\">\n            <b>\n              <i> ABOUT THE MODULES.. </i>{\" \"}\n            </b>\n          </Card.Header>\n          <Card.Body>\n            <Card.Text>\n              <Table striped bordered hover className='table-responsive'>\n                <thead className=\"text-center\">\n                  <tr>\n                    <th>#</th>\n                    <th>MODULE NAME</th>\n                    <th>DESCRIPTION</th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  \n                  <tr>\n                    <td>1</td>\n                    <td className=\"text-center\"> BASIC </td>\n                    <td>\n                      {\" \"}\n                      <i>No Evolutionary Forces.</i>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>2</td>\n                    <td className=\"text-center\"> MIGRATION</td>\n                    <td>\n                      <i>\n                        Members of a different population join the focus\n                        population.\n                      </i>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>3</td>\n                    <td className=\"text-center\"> DRIFT </td>\n                    <td>\n                      <i>\n                        Change in Allele frequency due to randon sampling or\n                        chance events.\n                      </i>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>4</td>\n                    <td className=\"text-center\"> NR-MATING </td>\n                    <td>\n                      <i>\n                        {\" \"}\n                        Mate choice between lizards is based on phenotype or\n                        location and not random.{\" \"}\n                      </i>\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>5</td>\n                    <td className=\"text-center\"> MUTATION </td>\n                    <td>\n                      {\" \"}\n                      <i>\n                        {\" \"}\n                        Chance that one Allele may randomly change to another\n                        Allele.{\" \"}\n                      </i>{\" \"}\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>6</td>\n                    <td className=\"text-center\"> SELECTION </td>\n                    <td>\n                      {\" \"}\n                      <i>\n                        One phenotype has advantage over the other against\n                        outside forces.\n                      </i>{\" \"}\n                    </td>\n                  </tr>\n                  \n                  <tr>\n                    <td>7</td>\n                    <td className=\"text-center\"> MUTATION + SELECTION </td>\n                    <td>\n                      {\" \"}\n                      <i>(*Requires information*) </i>\n                    </td>\n                  </tr>\n\n                  <tr> <td colSpan=\"3\"></td> </tr>           \n\n                  <tr>\n                    <td colSpan=\"3\" style={{ fontSize:23, color:\"red\" }}>\n                        <i> <font color=\"black\"><u>NOTE</u>:</font> To preserve values for a new calculation press RESTART first and then change the inputs in the fields.</i>\n                    </td>\n                  </tr>\n                </tbody>\n              </Table>\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport \"./Help.css\";\nimport HelpForm from \"../modules/HelpForm\";\n\nexport default class Help extends Component {\n  render() {\n\n        var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive repeat center center fixed\n                  src = \"/assets/Deep_Blue.jpg\">\n                </Image>\n                <HelpForm style={textStyle}></HelpForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Card, Row, Col } from \"react-bootstrap\";\n\nclass ResultForm extends Component {\n  render() {\n    return (\n      <Card\n        bg=\"dark\"\n        text=\"white\"\n        style={{\n          position: \"absolute\",\n          left: \"440px\",\n          top: \"80px\",\n          width: \"30rem\",\n          zIndex: \"2\"\n        }}\n      >\n        <Card.Header style={{ textAlign: \"center\" }}>\n          <b>RESULT</b>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col>RED: {this.props.red_value}</Col>\n            <Col>p: {this.props.p_value}</Col>\n            <Col>n(A1A1): {this.props.a1a1_value}</Col>\n          </Row>\n          <Row>\n            <Col>BLUE: {this.props.blue_value}</Col>\n            <Col>q: {this.props.q_value}</Col>\n            <Col>n(A1A2): {this.props.a1a2_value}</Col>\n          </Row>\n          <Row>\n            <Col>Generation: {this.props.generation}</Col>\n            <Col>Dominance: {this.props.dominance} </Col>\n            <Col>n(A2A2): {this.props.a2a2_value}</Col>\n          </Row>\n\n\n\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default ResultForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\n\nclass ShowLizard extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     blue_images: [],\n  //     red_images: []\n  //   };\n  // }\n\n  showLizardBlue = num => {\n    let blue_images = [];\n    let max_y = 90;\n    let min_y = this.props.min_y;\n    let max_x = this.props.max_x;\n    let min_x = this.props.min_x;\n    console.log(\"number is\"+num);\n\n    if (num > 100) {\n      num = 100;\n    }\n\n    for (let i = 0; i < num; i++) {\n      let x_axis = Math.floor(Math.random() * (+max_x - +min_x)) + +min_x;\n      let y_axis = Math.floor(Math.random() * (+max_y - +min_y)) + +min_y;\n\n      blue_images.push(\n        <Image\n          src=\"assets/BlueLizard.png\"\n          key={\"blue\" + i}\n          style={{\n            position: \"absolute\",\n            height: \"5rem\",\n            width: \"5rem\",\n            top: y_axis + \"%\",\n            left: x_axis + \"%\",\n            zIndex: 1\n          }}\n        />\n      );\n    }\n    return blue_images;\n  };\n\n  showLizardRed = num => {\n    let red_images = [];\n    let max_y = 90;\n    let min_y = this.props.min_y;\n    let max_x = this.props.max_x;\n    let min_x = this.props.min_x;\n\n    if (num > 100) {\n      num = 100;\n    }\n    for (let i = 0; i < num; i++) {\n      let x_axis = Math.floor(Math.random() * (+max_x - +min_x)) + +min_x;\n      let y_axis = Math.floor(Math.random() * (+max_y - +min_y)) + +min_y;\n\n      red_images.push(\n        <Image\n          src=\"assets/RedLizard.png\"\n          key={\"red\" + i}\n          style={{\n            position: \"absolute\",\n            height: \"5rem\",\n            width: \"5rem\",\n            top: y_axis + \"%\",\n            left: x_axis + \"%\",\n            zIndex: 1\n          }}\n        />\n      );\n    }\n    return red_images;\n  };\n\n  render() {\n    let blue_value = parseInt(this.props.blue_value);\n    let red_value = parseInt(this.props.red_value);\n\n    console.log(\"blue :\"+ blue_value, \"red value :+\" +red_value);\n\n    let b = blue_value;\n    let r = red_value;\n    if(blue_value > 100 | red_value > 100 ){\n       b = Math.floor(100 * (blue_value / (blue_value + red_value)));\n       r = Math.floor(100 * (red_value / (blue_value + red_value)));\n    }else{\n       b = blue_value;\n       r = red_value;\n    }\n    console.log(\"b:\"+ blue_value, \"r :+\" +r);\n\n    return (\n      <div>\n        {this.showLizardBlue(b)}\n        {this.showLizardRed(r)}\n      </div>\n    );\n  }\n}\n\nexport default ShowLizard;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\n//import \"./Form.css\";\n\nclass BasicForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n      pressed: false,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n          dominance={this.state.dominance}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={37}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n              />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n    const q = (1 - this.state.frequency).toFixed(2);\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const a1a2 = 2 * p * q * population;\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    this.setState({ p_value: p });\n    this.setState({ q_value: q });\n\n    for (let i = 0; i < g; i++) {\n      this.updateGraph(this.state.generation + i + 1, q, p);\n    }\n\n    if (this.state.dominance === \"Red\") {\n\n      a1a1 = p * p * population;\n      a2a2 = q * q * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n    } else {\n\n      a2a2 = p * p * population;\n      a1a1 = q * q * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n    }\n\n    let finalGeneration = g + currentGeneration;\n\n    this.setState({ red_value: red_value });\n    this.setState({ a1a1_value: a1a1.toFixed(0) });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n    this.setState({ a2a2_value: a2a2.toFixed(0) });\n    this.setState({ pressed: true });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n  };\n\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"relative\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\"\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: 2\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> BASIC </b>\n          </Card.Header>\n\n          {/*FORM FOR BASIC MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default BasicForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport BasicForm from \"../modules/BasicForm\";\n\nexport default class Basic extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/basic_image_2.jpg\">\n                </Image>\n                <BasicForm style={textStyle}></BasicForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\n//import \"./Form.css\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\nclass MigrationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n\n      freq_A1star: 0,\n      fract_migrants: 0,\n\n      pressed: false,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n          dominance={this.state.dominance}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={48}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // Variable Assignment\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n    const q = (1 - this.state.frequency).toFixed(2);\n    const tmp_fract_migrants = parseFloat(this.state.fract_migrants);\n    const tmp_freq_A1star = parseFloat(this.state.freq_A1star);\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    // Make custom changes here for Migration (the 'for loop'):\n\n    let migrationFrequency = 0.0;\n    let tempA1 = p;\n\n    for (let i = 0; i < g; i++) {\n      migrationFrequency =\n        (1 - tmp_fract_migrants) * tempA1 +\n        tmp_fract_migrants * tmp_freq_A1star;\n      tempA1 = migrationFrequency;\n      this.updateGraph(this.state.generation + i + 1, 1 - tempA1, tempA1);\n    }\n\n    let a1a2 = 2 * tempA1 * (1 - tempA1) * population;\n\n    if (this.state.dominance === \"Red\") {\n      a1a1 = tempA1 * tempA1 * population;\n      a2a2 = (1 - tempA1) * (1 - tempA1) * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n      this.setState({ a1a1_value: a1a1.toFixed(0) });\n      this.setState({ a2a2_value: a2a2.toFixed(0) });\n    } else {\n      a2a2 = tempA1 * tempA1 * population;\n      a1a1 = (1 - tempA1) * (1 - tempA1) * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n      this.setState({ a2a2_value: a1a1.toFixed(0) });\n      this.setState({ a1a1_value: a2a2.toFixed(0) });\n    }\n\n    let finalGeneration = g + currentGeneration;\n\n    // Setting state for values in the ResultForm\n\n    this.setState({ red_value: red_value });\n\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n\n    //\n    this.setState({ frequency: migrationFrequency });\n    this.setState({ pressed: true });\n    this.setState({ p_value: migrationFrequency.toFixed(4) });\n    this.setState({ q_value: (1 - migrationFrequency).toFixed(4) });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n  };\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"absolute\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\",\n            // width: \"25rem\",\n            // zIndex: 2\n\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: \"2\"\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> MIGRATION </b>\n          </Card.Header>\n\n          {/*FORM FOR MIGRATION MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1* in Migrants: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"freq_A1star\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Fraction of Migrants (M) </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"fract_migrants\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            {/* BUTTONS: */}\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default MigrationForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport MigrationForm from \"../modules/MigrationForm\"\n\nexport default class Migration extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/Migration_bg.jpg\">\n                </Image>\n                <MigrationForm style={textStyle}></MigrationForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { MDBTable, MDBTableBody, MDBTableHead, MDBDataTable,MDBCard } from \"mdbreact\";\n\nclass TablePage extends Component {\n  render() {\n    const data = {\n      columns: [\n        {\n          label: \"Generation\",\n          field: \"id\",\n          sort: \"asc\"\n        },\n        {\n          label: \"p-value\",\n          field: \"first\"\n        },\n        {\n          label: \"q-value\",\n          field: \" last\"\n        }\n      ],\n      rows: this.props.rows\n    };\n\n    return (\n      // <div>\n      // <MDBTable scrollY>\n      //   <MDBTableHead columns={data.columns} />\n      //   <MDBTableBody rows={data.rows} />\n      // </MDBTable>\n      // </div>\n      <MDBDataTable\n      scrollX\n      striped\n      maxHeight=\"20vh\"\n      paging={false }\n      responsiveSm\n      searching ={false}\n      sorting={false}\n      bordered\n      data={data}\n    />\n\n\n    );\n  }\n}\n\nexport default TablePage;\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\n//import \"./Form.css\";\nimport Table from \"./Table\";\n\nclass DriftForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n      pressed: false,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0,\n      table_dict: [],\n      tab: false,\n      color: [],\n      button_state_restart_fix :0,\n      optionsChart : {\n        yAxis: {\n          tickInterval: 0.1\n      }\n      }\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"18px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"18px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      \n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n          dominance={this.state.dominance}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={52}\n          min_x={35}\n          max_x={80}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              options= {this.state.optionsChart}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  renderTable = tab => {\n    if (tab === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"60px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"10px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\",\n            opacity:0.9\n          }}\n        >\n          {<Table rows={this.state.table_dict} />}\n        </div>\n      );\n    }\n  };\n\n  // Handle Submit:\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    let button_state_restart_fix2 = parseInt(this.state.button_state_restart_fix);\n    button_state_restart_fix2 += 1;\n\n    this.setState({ button_state_restart_fix: button_state_restart_fix2 });\n    console.log(button_state_restart_fix2);\n    // Variable Assignment\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n    const q = (1 - this.state.frequency).toFixed(2);\n    // const tmp_fract_migrants = parseFloat(this.state.fract_migrants);\n    // const tmp_freq_A1star = parseFloat(this.state.freq_A1star);\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    // Make custom changes here for Migration (the 'for loop'):\n\n    let driftFrequency = 0.0;\n    let tempA1 = p;\n    //let looperFreq = p;\n\n    for (let i = 0; i < g; i++) {\n      /* The if-else clause from Long Jing's code is not working in our Drift module. Hence commented it. Works fine after that. \n          \n          if (looperFreq ==0.0) {\n            tempA1 = 0.0;        \n          }\n\n          else if (tempA1 =1.0) {\n            tempA1 = 1.0;\n          }\n\n          else {\n            let twicePop = 2*population;\n            let alleleCount = 0;\n\n                for (i=0;i<twicePop;i++){\n                      if (Math.random()<tempA1) {\n                        alleleCount++;\n                      }          \n                }\n\n              driftFrequency = (alleleCount/twicePop).toFixed(4); // Can remove toFixed(4)\n              tempA1 = driftFrequency;\n\n          }\n          */\n\n      // Working Part without the if-else clause:\n\n      let twicePop = 2 * population;\n      let alleleCount = 0;\n\n      for (let j = 0; j < twicePop; j++) {\n        if (Math.random() < tempA1) {\n          alleleCount++;\n        }\n      }\n\n      driftFrequency = alleleCount / twicePop.toFixed(4); // Can remove toFixed(4)\n      tempA1 = driftFrequency;\n\n      let Record = {\n        Generation: this.state.generation + i + 1,\n        P_Value: driftFrequency.toFixed(4),\n        Q_Value: (1 - driftFrequency).toFixed(4)\n      };\n      let Table = this.state.table_dict;\n      Table.push(Record);\n      this.setState({ table_dict: Table });\n      this.updateGraph(\n        this.state.generation + i + 1,\n        (1 - driftFrequency).toFixed(4),\n        driftFrequency.toFixed(4)\n      );\n    }\n\n    let a1a2 = 2 * tempA1 * (1 - tempA1) * population;\n\n    if (this.state.dominance === \"Red\") {\n      a1a1 = tempA1 * tempA1 * population;\n      a2a2 = (1 - tempA1) * (1 - tempA1) * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n      this.setState({ a1a1_value: a1a1.toFixed(0) });\n      this.setState({ a2a2_value: a2a2.toFixed(0) });\n    } else {\n      a2a2 = tempA1 * tempA1 * population;\n      a1a1 = (1 - tempA1) * (1 - tempA1) * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n      this.setState({ a2a2_value: a1a1.toFixed(0) });\n      this.setState({ a1a1_value: a2a2.toFixed(0) });\n    }\n\n    let finalGeneration = g + currentGeneration;\n\n    // Setting state for values in the ResultForm\n\n    this.setState({ red_value: red_value });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n\n    // Setting Module Specific values:\n    this.setState({ frequency: driftFrequency });\n    this.setState({ pressed: true });\n    this.setState({ p_value: driftFrequency.toFixed(4) });\n    this.setState({ q_value: (1 - driftFrequency).toFixed(4) });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    let button_state_restart_fix2 = parseInt(this.state.button_state_restart_fix);\n    if(button_state_restart_fix2 >0){\n\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n    this.setState({ table_dict: [] });\n    button_state_restart_fix2 =0;\n    this.setState({ button_state_restart_fix: 0 });\n    console.log(button_state_restart_fix2)\n  }else{\n    window.alert(\"Restart already pressed !\");\n  }\n  };\n\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  handleTable = e => {\n    e.preventDefault();\n    if (this.state.tab === false) {\n      this.setState({ tab: true });\n    } else {\n      this.setState({ tab: false });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"relative\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\"\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: 2\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> DRIFT </b>\n          </Card.Header>\n\n          {/*FORM FOR DRIFT MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <ButtonToolbar>\n              {/* <Button\n                type=\"submit\"\n                variant=\"danger\"\n                style={{\n                  position: \"relative\",\n                  left: \"-3px\",\n                  backgroundColor: \"#AC2CBA\",\n                  color: \"white\"\n                }}\n                onClick={this.handleTable}\n              >\n                History\n              </Button> */}\n\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"3px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"8px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"13px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n        {this.renderTable(this.state.tab)}\n      </div>\n    );\n  }\n}\n\nexport default DriftForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport DriftForm from \"../modules/DriftForm\"\n\nexport default class Drift extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute',  \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/Drift_bg.jpg\">\n                </Image>\n                <DriftForm style={textStyle}></DriftForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\n//import \"./Form.css\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\nclass NR_MatingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n\n      p_Inbreeding: 0,\n      firstGen: true,\n\n      pressed: false,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n          dominance={this.state.dominance}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={48}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    // Variable Assignment\n    const population = parseInt(this.state.population);\n    let p = parseFloat(this.state.frequency);\n    let q = 1 - p;\n    const p_Inbreeding = parseFloat(this.state.p_Inbreeding);\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    // Make custom changes here for NR-MATING (the 'for loop'):\n\n    let tempA1 = p;\n    let tempA2 = q;\n    let F = p_Inbreeding;\n    let a1a2 = 0;\n\n    let loopFlag = this.state.firstGen;\n    let looper = g + currentGeneration;\n\n    if (g == 1 && looper >= 2) {\n      for (let j = 0; j < g; j++) {\n        a1a2 = 2 * tempA1 * tempA2 * Math.pow(1 - F, currentGeneration); // IMPORTANT: Use 'currentGeneration in the Math.pow() function.\n        a1a1 = (1 - a1a2) / 2;\n        a2a2 = a1a1;\n        \n\n        tempA1 = (2 * a1a1 + a1a2) / 2;\n        tempA2 = 1 - tempA1;\n\n        p = tempA1;\n        q = 1 - tempA1;\n\n        this.updateGraph(this.state.generation + j + 1, q, p);\n      }\n    } else {\n      for (let i = 0; i < g; i++) {\n        if (loopFlag) {\n          loopFlag = false;\n\n          a1a1 = tempA1 * tempA1;\n          a1a2 = 2 * tempA1 * tempA2;\n          a2a2 = tempA2 * tempA2;\n\n          p = tempA1;\n          q = 1 - tempA1;\n        } else {\n          a1a2 = 2 * tempA1 * tempA2 * Math.pow(1 - F, currentGeneration + i); // IMPORTANT: Use 'currentGeneration in the Math.pow() function.\n          a1a1 = (1 - a1a2) / 2;\n          a2a2 = a1a1;\n\n          tempA1 = (2 * a1a1 + a1a2) / 2;\n          tempA2 = 1 - tempA1;\n\n          p = tempA1;\n          q = 1 - tempA1;\n        }\n\n        this.updateGraph(this.state.generation + i + 1, q, p);\n      }\n    }\n\n    if (this.state.dominance === \"Red\") {\n      // a1a1 = tempA1 * tempA1 * population;\n      // a2a2 = (1 - tempA1) * (1 - tempA1) * population;\n      red_value = ((a1a1 + a1a2) * population).toFixed(0); // Dominant\n      blue_value = (a2a2 * population).toFixed(0); // Recessive\n      this.setState({ a1a1_value: (a1a1 * population).toFixed(0) });\n      this.setState({ a2a2_value: (a2a2 * population).toFixed(0) });\n    } else {\n      // a2a2 = tempA1 * tempA1 * population;\n      // a1a1 = (1 - tempA1) * (1 - tempA1) * population;\n      blue_value = ((a2a2 + a1a2) * population).toFixed(0); // Dominant\n      red_value = (a1a1 * population).toFixed(0); // Recessive\n      this.setState({ a2a2_value: (a2a2 * population).toFixed(0) });\n      this.setState({ a1a1_value: (a1a1 * population).toFixed(0) });\n    }\n\n    /* This is important as it helps in incrementing a const declared variable and updating its value in another variable (finalGeneration)\n       even though the component gets rendered again and again. So 'finalGeneration' is the variable that stores the value after\n       the START/NEXT button is hit by the user.\n    */\n\n    let finalGeneration = g + currentGeneration;\n\n    this.setState({ red_value: red_value });\n    //this.setState({ a1a1_value: (a1a1 * population).toFixed(0) });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: (a1a2 * population).toFixed(0) });\n    this.setState({ generation: finalGeneration });\n    //this.setState({ a2a2_value: (a2a2 * population).toFixed(0) });\n\n    this.setState({ frequency: tempA1 });\n    this.setState({ pressed: true });\n    this.setState({ p_value: p.toFixed(4) });\n    this.setState({ q_value: (1 - p).toFixed(4) });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n    this.setState({ firstGen: true });\n  };\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"absolute\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\",\n            // width: \"25rem\",\n            // zIndex: 2\n\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: \"2\"\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> NR-MATING </b>\n          </Card.Header>\n\n          {/*FORM FOR NR-MATING MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Probability of inbreeding (F): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"p_Inbreeding\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Probability ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            {/* BUTTONS: */}\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default NR_MatingForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport \"./NR-Mating.css\"\nimport NR_MatingForm from '../modules/NR_MatingForm'\n\nexport default class NR_Mating extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/NR-Mating_bg.jpg\">\n                </Image>\n                <NR_MatingForm style={textStyle}></NR_MatingForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\n//import \"./Form.css\";\n\nclass MutationForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n      a1Toa2: 0,\n      a2Toa1: 0,\n      pressed: false,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          dominance={this.state.dominance}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={54}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const a1mutate = parseFloat(this.state.a1Toa2);\n    const a2mutate = parseFloat(this.state.a2Toa1);\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    let mutationFrequency = 0.0;\n    let tempA1 = p;\n\n    for (let i = 0; i < g; i++) {\n      mutationFrequency = (1 - a1mutate) * tempA1 + a2mutate * (1 - tempA1);\n      tempA1 = mutationFrequency;\n      this.updateGraph(\n        this.state.generation + i + 1,\n        (1 - mutationFrequency).toFixed(4),\n        mutationFrequency.toFixed(4)\n      );\n    }\n\n    const a1a2 = 2 * mutationFrequency * (1 - mutationFrequency) * population;\n\n    if (this.state.dominance === \"Red\") {\n      a1a1 = mutationFrequency * mutationFrequency * population;\n      a2a2 = (1 - mutationFrequency) * (1 - mutationFrequency) * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n      this.setState({ a1a1_value: a1a1.toFixed(0) });\n      this.setState({ a2a2_value: a2a2.toFixed(0) });\n    } else {\n      a2a2 = mutationFrequency * mutationFrequency * population;\n      a1a1 = (1 - mutationFrequency) * (1 - mutationFrequency) * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n      this.setState({ a2a2_value: a1a1.toFixed(0) });\n      this.setState({ a1a1_value: a2a2.toFixed(0) });\n    }\n\n    var finalGeneration = g + currentGeneration;\n\n    this.setState({ red_value: red_value });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n\n    this.setState({ frequency: mutationFrequency });\n    this.setState({ pressed: true });\n    this.setState({ p_value: mutationFrequency.toFixed(4) });\n    this.setState({ q_value: (1 - mutationFrequency).toFixed(4) });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n  };\n\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"absolute\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\",\n            // opacity: \"0.85\",\n            // width: \"25rem\",\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: \"2\"\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> MUTATION </b>\n          </Card.Header>\n\n          {/*FORM FOR MUTATION MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> A1 to A2 Mutation Rate: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"a1Toa2\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  (0.00001 - 0.000000001)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> A2 to A1 Mutation Rate: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"a2Toa1\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  (0.00001 - 0.000000001)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default MutationForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport MutationForm from \"../modules/MutationForm\";\n\nexport default class Mutation extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/mutation_image.jpg\">\n                </Image>\n                <MutationForm style={textStyle}></MutationForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\n//import \"./Form.css\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\n\nclass SelectionForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n      pressed: false,\n      fitnessa1a1: 0,\n      fitnessa1a2: 0,\n      fitnessa2a2: 0,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = pressed => {\n    if (pressed === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          dominance={this.state.dominance}\n          a1a2_value={this.state.a1a2_value}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={55}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = graph => {\n    if (graph === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n    const q = 1 - p;\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const fitnessa1a1 = parseFloat(this.state.fitnessa1a1);\n    const fitnessa1a2 = parseFloat(this.state.fitnessa1a2);\n    const fitnessa2a2 = parseFloat(this.state.fitnessa2a2);\n\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    let tempA1 = p;\n    let tempA2 = q;\n    let wAverage = 0;\n    let selectionP = 0;\n    let selectionQ = 0;\n\n    for (let i = 0; i < g; i++) {\n      wAverage =\n        tempA1 * tempA1 * fitnessa1a1 +\n        2 * tempA1 * tempA2 * fitnessa1a2 +\n        tempA2 * tempA2 * fitnessa2a2;\n      selectionP =\n        (tempA1 * tempA1 * fitnessa1a1 + tempA1 * tempA2 * fitnessa1a2) /\n        wAverage;\n      selectionQ =\n        (tempA2 * tempA2 * fitnessa2a2 + tempA1 * tempA2 * fitnessa1a2) /\n        wAverage;\n      tempA1 = selectionP;\n      tempA2 = selectionQ;\n      this.updateGraph(this.state.generation + i + 1, tempA2, tempA1);\n    }\n\n    this.setState({ frequency: selectionP });\n    this.setState({ pressed: true });\n    this.setState({ p_value: tempA1.toFixed(6) });\n    this.setState({ q_value: tempA2.toFixed(6) });\n\n    let a1a2 = ((2 * tempA1 * tempA2 * fitnessa1a2) / wAverage) * population;\n\n    if (this.state.dominance === \"Red\") {\n      a1a1 = ((tempA1 * tempA1 * fitnessa1a1) / wAverage) * population;\n      a2a2 = ((tempA2 * tempA2 * fitnessa2a2) / wAverage) * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n      this.setState({ a1a1_value: a1a1.toFixed(0) });\n      this.setState({ a2a2_value: a2a2.toFixed(0) });\n    } else {\n      a2a2 = ((tempA1 * tempA1 * fitnessa1a1) / wAverage) * population;\n      a1a1 = ((tempA2 * tempA2 * fitnessa2a2) / wAverage) * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n      this.setState({ a2a2_value: a1a1.toFixed(0) });\n      this.setState({ a1a1_value: a2a2.toFixed(0) });\n    }\n\n    var finalGeneration = g + currentGeneration;\n\n    this.setState({ red_value: red_value });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n  };\n\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"absolute\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\",\n            // opacity: \"0.85\",\n            // width: \"25rem\",\n            // zIndex: \"2\"\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: \"2\"\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> SELECTION </b>\n          </Card.Header>\n\n          {/*FORM FOR SELECTION MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Initial population (eg: 10,100,1000)\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Frequency ranges from 0 to 1\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Fitness of A1A1: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"fitnessa1a1\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Fitness of A1A2: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"fitnessa1a2\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Fitness of A2A2: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"fitnessa2a2\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n                <Form.Text className=\"text-muted\">\n                  Simualte how many generations you want to move forward\n                </Form.Text>\n              </Col>\n            </Form.Group>\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default SelectionForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport SelectionForm from '../modules/SelectionForm'\n\nexport default class Selection extends Component {\n  render() {\n\n    var background = { backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/Selection_bg.jpg\">\n                </Image>\n                <SelectionForm style={textStyle}></SelectionForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Form,\n  Card,\n  Button,\n  ButtonGroup,\n  Row,\n  Col,\n  ButtonToolbar\n} from \"react-bootstrap\";\nimport ResultForm from \"./ResultForm\";\nimport ShowLizard from \"./ShowLizard\";\nimport { LineChart } from \"react-chartkick\";\nimport Chartkick from \"react-chartkick\";\nimport Highcharts from 'highcharts';\n\n//import \"./Form.css\";\n\nclass MSForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      population: 0,\n      frequency: 0,\n      dominance: \"Red\",\n      steps: 1,\n      red_value: 0,\n      p_value: 0,\n      a1a1_value: 0,\n      blue_value: 0,\n      q_value: 0,\n      a1a2_value: 0,\n      generation: 0,\n      a2a2_value: 0,\n      a1Toa2: 0,\n      a2Toa1: 0,\n      pressed: false,\n      fitnessa1a1: 0,\n      fitnessa1a2: 0,\n      fitnessa2a2: 0,\n      data: [], // Test Graph\n      q_dict: {},\n      p_dict: {},\n      graph: false,\n      constF: 0\n    };\n    Chartkick.use(Highcharts)\n  }\n\n  renderButton = pressed => {\n    if (pressed === false) {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          START\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          type=\"submit\"\n          variant=\"success\"\n          onClick={this.handleSubmit}\n          style={{ position: \"relative\", left: \"95px\" }}\n        >\n          NEXT\n        </Button>\n      );\n    }\n  };\n\n  renderResult = graph => {\n    if (graph === true) {\n      return (\n        <ResultForm\n          red_value={this.state.red_value}\n          p_value={this.state.p_value}\n          a1a1_value={this.state.a1a1_value}\n          blue_value={this.state.blue_value}\n          q_value={this.state.q_value}\n          a1a2_value={this.state.a1a2_value}\n          dominance={this.state.dominance}\n          generation={this.state.generation}\n          a2a2_value={this.state.a2a2_value}\n        />\n      );\n    }\n  };\n\n  renderLizard = pressed => {\n    if (pressed === true) {\n      return (\n        <ShowLizard\n          blue_value={this.state.blue_value}\n          red_value={this.state.red_value}\n          min_y={48}\n          min_x={0}\n          max_x={90}\n        />\n      );\n    }\n  };\n\n  renderGraph = pressed => {\n    if (pressed === true) {\n      return (\n        <div\n          style={{\n            position: \"absolute\",\n            bottom: \"20px\",\n            right: \"20px\",\n            color: \"white\",\n            backgroundColor: \"white\",\n            padding: \"20px\",\n            borderRadius: \"2px\",\n            zIndex: \"5\"\n          }}\n        >\n          {\n            <LineChart\n              id=\"users-chart\"\n              width=\"400px\"\n              height=\"400px\"\n              xtitle=\"Generation\"\n              ytitle=\"Frequency\"\n              legend=\"bottom\"\n              max={1}\n              library ={{yAxis: {\n                tickInterval: 0.1\n            }}}\n              data={this.state.data}\n              colors={[\"#b00\", \"#0000ff\"]}\n            />\n          }\n        </div>\n      );\n    }\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const population = parseInt(this.state.population);\n    const p = parseFloat(this.state.frequency);\n    const q = 1 - p;\n\n    if (this.state.constF === 0) {\n      this.setState({ constF: p });\n    }\n\n    const a1mutate = parseFloat(this.state.a1Toa2);\n    const a2mutate = parseFloat(this.state.a2Toa1);\n    const fitnessa1a1 = parseFloat(this.state.fitnessa1a1);\n    const fitnessa1a2 = parseFloat(this.state.fitnessa1a2);\n    const fitnessa2a2 = parseFloat(this.state.fitnessa2a2);\n\n    const g = parseInt(this.state.steps);\n    const currentGeneration = parseInt(this.state.generation);\n    let a1a1 = 0;\n    let a2a2 = 0;\n    let red_value = 0;\n    let blue_value = 0;\n\n    let msFrequency = 0.0;\n    let tempA1 = p;\n    let tempA2 = q;\n    let wAverage = 0;\n    let selectionP = 0;\n    let selectionQ = 0;\n\n    for (let i = 0; i < g; i++) {\n      wAverage =\n        tempA1 * tempA1 * fitnessa1a1 +\n        2 * tempA1 * tempA2 * fitnessa1a2 +\n        tempA2 * tempA2 * fitnessa2a2;\n      selectionP =\n        (tempA1 * tempA1 * fitnessa1a1 + tempA1 * tempA2 * fitnessa1a2) /\n        wAverage;\n      selectionQ =\n        (tempA2 * tempA2 * fitnessa2a2 + tempA1 * tempA2 * fitnessa1a2) /\n        wAverage;\n      msFrequency = (1 - a1mutate) * selectionP + a2mutate * selectionQ;\n      tempA1 = msFrequency;\n      tempA2 = 1 - msFrequency;\n      this.updateGraph(this.state.generation + i + 1, tempA2, tempA1);\n    }\n\n    this.setState({ frequency: msFrequency });\n    this.setState({ pressed: true });\n    this.setState({ p_value: tempA1.toFixed(6) });\n    this.setState({ q_value: tempA2.toFixed(6) });\n\n    let a1a2 = 2 * tempA1 * tempA2 * population;\n\n    if (this.state.dominance === \"Red\") {\n      a1a1 = tempA1 * tempA1 * population;\n      a2a2 = tempA2 * tempA2 * population;\n      red_value = (a1a1 + a1a2).toFixed(0);\n      blue_value = a2a2.toFixed(0);\n      this.setState({ a1a1_value: a1a1.toFixed(0) });\n      this.setState({ a2a2_value: a2a2.toFixed(0) });\n    } else {\n      a2a2 = tempA1 * tempA1 * population;\n      a1a1 = tempA2 * tempA2 * population;\n      blue_value = (a1a1 + a1a2).toFixed(0);\n      red_value = a2a2.toFixed(0);\n      this.setState({ a2a2_value: a1a1.toFixed(0) });\n      this.setState({ a1a1_value: a2a2.toFixed(0) });\n    }\n\n    var finalGeneration = g + currentGeneration;\n\n    this.setState({ red_value: red_value });\n    this.setState({ blue_value: blue_value });\n    this.setState({ a1a2_value: a1a2.toFixed(0) });\n    this.setState({ generation: finalGeneration });\n  };\n\n  handleButtonPress = e => {\n    let button = e.target.className;\n    button = button.split(\" \");\n    button = button[0];\n    this.setState({ dominance: button });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleRestart = e => {\n    e.preventDefault();\n    this.setState({ generation: 0 });\n    this.setState({ frequency: this.state.constF });\n    this.setState({ constF: 0 });\n    this.setState({ pressed: false });\n    this.setState({ graph: false });\n    this.setState({ q_dict: {} });\n    this.setState({ p_dict: {} });\n  };\n\n  handleGraph = e => {\n    e.preventDefault();\n    if (this.state.graph === false) {\n      this.setState({ graph: true });\n    } else {\n      this.setState({ graph: false });\n    }\n  };\n\n  updateGraph = (finalGeneration, q_value, p_value) => {\n    if (finalGeneration === 0) {\n    } else {\n      var q_dictionary = this.state.q_dict;\n      q_dictionary[finalGeneration] = q_value;\n      var p_dictionary = this.state.p_dict;\n      p_dictionary[finalGeneration] = p_value;\n      var table = [];\n      table[1] = { name: \"q-value\", data: q_dictionary };\n      table[0] = { name: \"p-value\", data: p_dictionary };\n      this.setState({ data: table });\n      this.setState({ q_dict: q_dictionary });\n      this.setState({ p_dict: p_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"modules\">\n        <Card\n          bg=\"dark\"\n          text=\"white\"\n          style={{\n            // position: \"absolute\",\n            // marginTop: \"80px\",\n            // marginLeft: \"15px\",\n            // width: \"25rem\",\n            // opacity: \"0.85\",\n            // zIndex: \"2\"\n            position: \"absolute\",\n            top: \"80px\",\n            left: \"15px\",\n            width: \"25rem\",\n            opacity: \"0.85\",\n            zIndex: \"2\"\n          }}\n        >\n          <Card.Header style={{ textAlign: \"center\" }}>\n            <b> M+S </b>\n          </Card.Header>\n\n          {/*FORM FOR MUTATION MODULE */}\n\n          <Form style={{ margin: \"10px\" }} text=\"white\">\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\">Population: </font>\n              </Form.Label>\n              <Col lg=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0\"\n                  name=\"population\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Frequency of A1 allele (RED): </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"0.0\"\n                  name=\"frequency\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <Form.Row>\n              <Col>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm=\"5\">\n                    <font color=\"white\"> Fitness of A1A1: </font>\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      type=\"\"\n                      placeholder=\"0.0\"\n                      name=\"fitnessa1a1\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm=\"5\">\n                    <font color=\"white\"> Fitness of A1A2: </font>\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      type=\"\"\n                      placeholder=\"0.0\"\n                      name=\"fitnessa1a2\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm=\"5\">\n                    <font color=\"white\"> Fitness of A2A2: </font>\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      type=\"\"\n                      placeholder=\"0.0\"\n                      name=\"fitnessa2a2\"\n                      onChange={this.handleInputChange}\n                    />\n                  </Col>\n                </Form.Group>\n              </Col>\n\n              <Col>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm=\"5\">\n                    <font color=\"white\"> A1 to A2 Mutation Rate: </font>\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      type=\"\"\n                      placeholder=\"0.0\"\n                      name=\"a1Toa2\"\n                      onChange={this.handleInputChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      (0.00001 - 0.000000001)\n                    </Form.Text>\n                  </Col>\n                </Form.Group>\n                <Form.Group as={Row} controlId=\"formHorizontalEmail\">\n                  <Form.Label column sm=\"5\">\n                    <font color=\"white\"> A2 to A1 Mutation Rate: </font>\n                  </Form.Label>\n                  <Col sm=\"7\">\n                    <Form.Control\n                      type=\"\"\n                      placeholder=\"0.0\"\n                      name=\"a2Toa1\"\n                      onChange={this.handleInputChange}\n                    />\n                    <Form.Text className=\"text-muted\">\n                      (0.00001 - 0.000000001)\n                    </Form.Text>\n                  </Col>\n                </Form.Group>\n              </Col>\n            </Form.Row>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Dominance: </font>\n              </Form.Label>\n\n              <ButtonGroup\n                aria-label=\"Basic example\"\n                style={{ position: \"relative\", left: \"15px\" }}\n              >\n                <Button\n                  className=\"Red\"\n                  variant=\"danger\"\n                  onClick={this.handleButtonPress}\n                >\n                  RED\n                </Button>\n                <Button\n                  className=\"Blue\"\n                  variant=\"primary\"\n                  onClick={this.handleButtonPress}\n                >\n                  BLUE\n                </Button>\n              </ButtonGroup>\n            </Form.Group>\n\n            <Form.Group as={Row}>\n              <Form.Label column sm=\"5\">\n                <font color=\"white\"> Step 'n' generations forward: </font>\n              </Form.Label>\n              <Col sm=\"7\">\n                <Form.Control\n                  type=\"\"\n                  placeholder=\"1\"\n                  name=\"steps\"\n                  onChange={this.handleInputChange}\n                />\n              </Col>\n            </Form.Group>\n\n            <ButtonToolbar>\n              <Button\n                type=\"submit\"\n                variant=\"warning\"\n                style={{ position: \"relative\", left: \"65px\" }}\n                onClick={this.handleGraph}\n              >\n                Graph\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"info\"\n                style={{ position: \"relative\", left: \"75px\" }}\n                onClick={this.handleRestart}\n              >\n                Restart\n              </Button>\n\n              <Button\n                type=\"submit\"\n                variant=\"secondary\"\n                style={{ position: \"relative\", left: \"85px\" }}\n              >\n                Clear\n              </Button>\n\n              {/* <Button type=\"submit\" variant=\"success\" style={{margin:\"10px 5px\"}}>\n                Restart\n              </Button> */}\n\n              {this.renderButton(this.state.pressed)}\n            </ButtonToolbar>\n          </Form>\n        </Card>\n\n        <div>{this.renderResult(this.state.pressed)}</div>\n        <div>{this.renderLizard(this.state.pressed)}</div>\n\n        {this.renderGraph(this.state.graph)}\n      </div>\n    );\n  }\n}\n\nexport default MSForm;\n","import React, { Component } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport MSForm from \"../modules/M+S_Form\";\n\nexport default class MS extends Component {\n  render() {\n\n    var background = {backgroundSize : 'cover', height: '100%', width:'100%', margin: '0 auto', overflow: 'hidden' };\n        var textStyle = {\n          position: 'absolute', \n          top: '50%', \n          left: '50%'\n        };\n\n\n    return (\n \n            <div style={{height:'100vh',width:'100%'}}>\n                <Image \n                  style = {background} responsive no-repeat center center fixed\n                  src = \"/assets/MS_bg.jpg\">\n                </Image>\n                <MSForm style={textStyle}></MSForm>\n            </div>\n\n\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./Graph.css\";\nimport { LineChart } from \"react-chartkick\";\nimport \"chart.js\";\n\nexport default class Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      blue_dict: {},\n      red_dict: {}\n    };\n  }\n\n  changeProps = () => {\n    if (this.props.generation === 0) {\n    } else {\n      var blue_dictionary = this.state.blue_dict;\n      blue_dictionary[this.props.generation] = this.props.blue_value;\n      var red_dictionary = this.state.red_dict;\n      red_dictionary[this.props.generation] = this.props.red_value;\n      var table = [];\n      table[0] = { name: \"Blue-Lizards\", data: blue_dictionary };\n      table[1] = { name: \"Red-Lizards\", data: red_dictionary };\n      this.setState({ data: table });\n      this.setState({ blue_dict: blue_dictionary });\n      this.setState({ red_dict: red_dictionary });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.changeProps}>UPDATE</button>\n        <LineChart\n          id=\"users-chart\"\n          width=\"400px\"\n          height=\"400px\"\n          xtitle=\"Generation\"\n          ytitle=\"Population\"\n          legend=\"bottom\"\n          data={this.state.data}\n        />\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport CustomNavbar from \"./components/CustomNavbar\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Help from \"./components/Help\";\nimport Basic from \"./components/Basic\";\nimport Migration from \"./components/Migration\";\nimport Drift from \"./components/Drift\";\nimport NR from \"./components/NR-Mating\";\nimport Mutation from \"./components/Mutation\";\nimport Selection from \"./components/Selection\";\nimport MS from \"./components/M+S\";\nimport ResultForm from \"./modules/ResultForm\";\nimport Graph from \"./components/Graph\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <CustomNavbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/help\" component={Help} />\n          <Route path=\"/basic\" component={Basic} />\n          <Route path=\"/migration\" component={Migration} />\n          <Route path=\"/drift\" component={Drift} />\n          <Route path=\"/nr-mating\" component={NR} />\n          <Route path=\"/mutation\" component={Mutation} />\n          <Route path=\"/selection\" component={Selection} />\n          <Route path=\"/m+s\" component={MS} />\n          <Route path=\"/graph\" component={Graph} />\n          <Route path=\"/result\" component={ResultForm} />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}